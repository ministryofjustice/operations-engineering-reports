name: Deploy to Dev

on:
  workflow_dispatch:
  push:
    branches:
      - "helm-deploy-2"

env:
    KUBE_CLUSTER: ${{ secrets.DEV_KUBE_CLUSTER }}
    KUBE_NAMESPACE: ${{ secrets.DEV_KUBE_NAMESPACE }}
    ECR_NAME: ${{ secrets.DEV_ECR_NAME }}
    AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
    AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
    FLASK_APP_SECRET: ${{ secrets.DEV_FLASK_APP_SECRET }}
    OPS_ENG_REPORTS_ENCRYPT_KEY: ${{ secrets.DEV_OPS_ENG_REPORTS_ENCRYPT_KEY }}
    OPERATIONS_ENGINEERING_REPORTS_API_KEY: ${{ secrets.DEV_OPERATIONS_ENGINEERING_REPORTS_API_KEY }}

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: docker build -t image -f Dockerfile.prod .
      - name: Push to ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.DEV_ECR_AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.DEV_ECR_AWS_SECRET_ACCESS_KEY }}
          region: eu-west-2
          local-image: image
          image: ${ECR_NAME}:${{ github.sha }}

  deploy-to-dev:
    if: ${{ always() }}
    needs: build-push
    runs-on: alpine/helm:3.11.2
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate to the cluster
        env:
          KUBE_CERT: ${{ secrets.DEV_KUBE_CERT }}
          KUBE_TOKEN: ${{ secrets.DEV_KUBE_TOKEN }}
        run: |
          echo "${KUBE_CERT}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${KUBE_TOKEN}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${KUBE_NAMESPACE}
          kubectl config get-contexts
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Helm install
        run: |
          helm upgrade operations-engineering-reports-dev \
            helm/operations-engineering-reports \
            --install \
            --force \
            --wait \
            --timeout 10m \
            --namespace operations-engineering-reports-dev \
            --set image.tag=${{github.sha}} \
            --set application.auth0ClientId=${AUTH0_CLIENT_ID} \
            --set application.auth0ClientSecret=${AUTH0_CLIENT_SECRET} \
            --set application.appSecretKey=${FLASK_APP_SECRET} \
            --set application.encryptionKey=${OPS_ENG_REPORTS_ENCRYPT_KEY} \
            --set application.apiKey=${OPERATIONS_ENGINEERING_REPORTS_API_KEY} \
            --set image.repository=${ECR_NAME} \
            --set ingress.host=operations-engineering-reports-dev.cloud-platform.service.justice.gov.uk
